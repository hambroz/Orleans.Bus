<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;

#if GRAIN_STUBBING_ENABLED
using Orleans.Bus.Stubs;
#endif 

namespace Orleans.Bus
{
    /// <summary>
    /// Base class for message based grains
    /// </summary>
    public abstract class MessageBasedGrain : GrainBase, IGrain
        #if GRAIN_STUBBING_ENABLED
            , IStubbedMessageGrain
        #endif
    {
<#@ include file="GrainCommon.cs" #>
	}

    /// <summary>
    /// Base class for persistent message based grains
    /// </summary>
    public abstract class MessageBasedGrain<TState> : GrainBase<TState>, IGrain
        #if GRAIN_STUBBING_ENABLED
            , IStubbedMessageGrain
            , IStubState<TState>
        #endif	 
        where TState : class, IGrainState
    {
<#@ include file="GrainCommon.cs" #>
		        
		#if GRAIN_STUBBING_ENABLED

        void IStubState<TState>.SetState(TState state)
        {
			#if DEBUG
			explicitState = state;
			#endif
		}
				
		TState explicitState;
       
		/// <summary>
        /// Gets grain's state
        /// </summary>
        protected new TState State
        {
            get { return explicitState; }
        }

		#endif
	}

    /// <summary>
    /// Base class for observable message based grains
    /// </summary>
    public abstract class ObservableMessageBasedGrain : MessageBasedGrain, IObservableGrain
        #if GRAIN_STUBBING_ENABLED
            , IStubbedObservableMessageGrain
        #endif
    {
<#@ include file="ObservableGrainCommon.cs" #>
    }

    /// <summary>
    /// Base class for persistent observable message based grains
    /// </summary>
    public abstract class ObservableMessageBasedGrain<TGrainState> : MessageBasedGrain<TGrainState>, IObservableGrain
        #if GRAIN_STUBBING_ENABLED
            , IStubbedObservableMessageGrain
        #endif
        where TGrainState : class, IGrainState
    {
<#@ include file="ObservableGrainCommon.cs" #>
	}
}